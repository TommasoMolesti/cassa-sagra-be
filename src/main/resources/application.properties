server.port=4000
logging.level.root=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USER}
spring.datasource.password=${DB_PASSWORD}

spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.minimum-idle=5

# ========= CONFIGURAZIONE SPRING SECURITY (CORRETTA PER SUPABASE) =========

# Usato dal nostro JwtDecoder personalizzato per trovare le chiavi pubbliche
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://${SUPABASE_PROJECT_REF}.supabase.co/auth/v1/jwks

# Usato per essere iniettato nel nostro validatore e controllare il campo "iss" del token
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://${SUPABASE_PROJECT_REF}.supabase.co/auth/v1

# Usato dal nostro validatore per controllare il campo "aud" del token
spring.security.oauth2.resourceserver.jwt.audiences=authenticated

# Usato dal nostro JwtDecoder per aggiungere l'header 'apikey' alla richiesta delle chiavi
SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}

logging.level.org.springframework.security=DEBUG